name: "wits"

services:

  celery:
    platform: linux/arm64
    build: .
    command: celery -A witswin worker --beat --concurrency 1 -l INFO 
    volumes:
      - ./src/:/usr/src/app
    depends_on:
      - app
      - redis

    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379

    networks:
      - base

  app:
    platform: linux/arm64
    extra_hosts:
      - "host.docker.internal:host-gateway"

    build: .
    command: pypy manage.py runserver 0.0.0.0:4444
    environment:
      - FIELD_KEY=${FIELD_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - MEMCACHEDCLOUD_SERVERS=memcached:11211
      - REDIS_PORT=6379
      - REDIS_HOST=redis
    expose:
      - 4444
    ports:
      - "4444:4444"
    depends_on:
      - database
      - redis
    volumes:
      - ./src/:/usr/src/app
    networks:
      - base
    
  database:
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - base
    ports:
      - 5432:5432
      
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data
    networks:
      - base



volumes:
  db:
    driver: local
  cache:
    driver: local


networks:
  base:
    name: base
    external: true
    driver: bridge
